/**
 * 1. Text-align defaults to center, so we have to override that.
 * 2. Need this on the button element to color the underline.
 */
.wuiSideNavItemButton {
  @include euiFontSizeS;
  text-align: left; /* 1 */
  display: block;
  width: 100%;
  padding: $euiSizeXS / 2 0;
  color: $euiTextColor; /* 2 */

  &.wuiSideNavItemButton--isClickable {
    &:hover .wuiSideNavItemButton__label {
      text-decoration: underline;
    }

    // Focus state background regardless of index/selected state.
    &:focus {
      // sass-lint:disable-block no-important
      background-color: $euiFocusBackgroundColor !important;
    }
  }

  &.wuiSideNavItemButton-isSelected {
    .wuiSideNavItemButton__icon {
      fill: $wuiColorPrimary;
    }

    .wuiSideNavItemButton__label {
      color: $wuiColorPrimary;
      font-weight: $euiFontWeightBold;
      text-decoration: underline;
    }
  }
}

.wuiSideNavItemButton__content {
  display: flex;
  align-items: center;
}

.wuiSideNavItemButton__icon {
  margin-right: $euiSizeS;
}

/**
  * 1. Enable ellipsis overflow to work (https://css-tricks.com/flexbox-truncated-text/)
  */
.wuiSideNavItemButton__labelContainer {
  min-width: 0; /* 1 */
}

.wuiSideNavItemButton__label {
  color: $wuiTitleColor;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  flex-grow: 1;
}

/**
 * 1. Draw the vertical line to group an expanded item's child items together.
 */
.wuiSideNavItem__items {
  position: relative;

  &:after { /* 1 */
    position: absolute;
    content: '';
    top: 0;
    bottom: $euiSizeM;
    width: 1px;
    background: $wuiBorderColor;
    left: 0;
  }
}

.wuiSideNavItem--root {
  &.wuiSideNavItem--rootIcon > .wuiSideNavItem__items {
    margin-left: $euiSizeL;
  }

  /**
   * 1. Create padding around focus area without indenting the item itself.
   */
  & > .wuiSideNavItemButton {
    margin-bottom: $euiSizeS;
    padding: 0;
    padding-left: $euiSizeS; /* 1 */
    padding-right: $euiSizeS; /* 1 */
    margin-left: -$euiSizeS; /* 1 */
    width: calc(100% + #{$euiSizeS * 2}); /* 1 */

    .wuiSideNavItemButton__label {
      @include wuiTitle('xs');
    }
  }


  & > .wuiSideNavItem__items {
    position: static;
    margin-left: 0;

    &:after {
      display: none;
    }
  }

  & + & {
    margin-top: $euiSizeXL;
  }
}

.wuiSideNavItem--trunk {
  /**
   * 1. Create padding around focus area without indenting the item itself.
   */
  & > .wuiSideNavItemButton {
    padding-left: $euiSizeS; /* 1 */
    padding-right: $euiSizeS; /* 1 */
    margin-left: -$euiSizeS; /* 1 */
    width: calc(100% + #{$euiSizeS * 2}); /* 1 */
  }

  & > .wuiSideNavItem__items {
    margin-left: $euiSizeS;
    width: 100%;
  }
}

.wuiSideNavItem--branch {
  /**
   * 1. Absolutely position the horizontal tick connecting the item to the vertical line.
   */
  & > .wuiSideNavItemButton {
    position: relative; /* 1 */
    padding-left: $euiSizeS;
    padding-right: $euiSizeS; /* 1 */

    &:after {
      position: absolute; /* 1 */
      content: '';
      top: 50%;
      left: 0;
      width: $euiSizeXS;
      height: 1px;
      background: $wuiBorderColor;
    }
  }

  & > .wuiSideNavItem__items {
    margin-left: $euiSize;
  }

  .wuiSideNavItemButton__icon {
    fill: $wuiTextSubduedColor;
  }

  .wuiSideNavItemButton__label {
    color: $wuiTextSubduedColor;
  }
}

