.wuiCodeBlock {
  max-width: 100%;
  display: block;
  position: relative;
  background: $wuiCodeBlockBackgroundColor;
  color: $wuiCodeBlockColor;

  .wuiCodeBlock__pre {
    @include wuiScrollBar;
    height: 100%;
    overflow: auto;
    display: block;
  }

  .wuiCodeBlock__pre--whiteSpacePre {
    white-space: pre;
  }

  .wuiCodeBlock__pre--whiteSpacePreWrap {
    white-space: pre-wrap;
  }

  .wuiCodeBlock__code {
    @include wuiCodeFont;
    display: block;
    line-height: $wuiLineHeight;
    font-weight: $wuiFontWeightRegular;
    font-size: inherit;
  }

  .wuiCodeBlock__controls {
    position: absolute;
    top: 0;
    right: 0;
  }

  .wuiCodeBlock__fullScreenButton + .wuiCodeBlock__copyButton {
    margin-top: $euiSizeXS;
  }

  &.wuiCodeBlock-isFullScreen {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    .wuiCodeBlock__pre {
      // sass-lint:disable-block no-important
      padding: $euiSizeXL !important;
    }

    .wuiCodeBlock__controls {
      top: $euiSizeXS;
      right: $euiSizeXS;
    }
  }

  &.wuiCodeBlock--fontSmall {
    font-size: $euiFontSizeXS;
  }

  &.wuiCodeBlock--fontMedium {
    font-size: $euiFontSizeS;
  }

  &.wuiCodeBlock--fontLarge {
    font-size: $euiFontSize;
  }

  // Storing for re-use the sizing of controls plus extra padding
  $controlsPadding: $euiSizeL + $euiSizeXS;

  &.wuiCodeBlock--hasControls .wuiCodeBlock__pre--whiteSpacePreWrap {
    padding-right: $controlsPadding;
  }

  &.wuiCodeBlock--hasControls .wuiCodeBlock__pre--whiteSpacePre {
    margin-right: $controlsPadding;
  }

  // Small padding
  &.wuiCodeBlock--paddingSmall {
    .wuiCodeBlock__pre {
      padding: $euiSizeS;
    }

    .wuiCodeBlock__controls {
      top: $euiSizeS;
      right: $euiSizeS;
    }

    &.wuiCodeBlock--hasControls .wuiCodeBlock__pre--whiteSpacePreWrap {
      padding-right: $euiSizeS + $controlsPadding;
    }

    &.wuiCodeBlock--hasControls .wuiCodeBlock__pre--whiteSpacePre {
      margin-right: $euiSizeS + $controlsPadding;
    }
  }

  // Medium padding
  &.wuiCodeBlock--paddingMedium {
    .wuiCodeBlock__pre {
      padding: $euiSize;
    }

    .wuiCodeBlock__controls {
      top: $euiSize;
      right: $euiSize;
    }

    &.wuiCodeBlock--hasControls .wuiCodeBlock__pre--whiteSpacePreWrap {
      padding-right: $euiSize + $controlsPadding;
    }

    &.wuiCodeBlock--hasControls .wuiCodeBlock__pre--whiteSpacePre {
      margin-right: $euiSize + $controlsPadding;
    }
  }

  // Large padding
  &.wuiCodeBlock--paddingLarge {
    .wuiCodeBlock__pre {
      padding: $euiSizeL;
    }

    .wuiCodeBlock__controls {
      top: $euiSizeL;
      right: $euiSizeL;
    }

    &.wuiCodeBlock--hasControls .wuiCodeBlock__pre--whiteSpacePreWrap {
      padding-right: $euiSizeL + $controlsPadding;
    }

    &.wuiCodeBlock--hasControls .wuiCodeBlock__pre--whiteSpacePre {
      margin-right: $euiSizeL + $controlsPadding;
    }
  }

  /*
   * 1. Size the code against the text its embedded within.
   */
  &.wuiCodeBlock--inline {
    display: inline-block;
    white-space: pre;
    color: $euiTextColor;
    font-size: 90%; /* 1 */
    padding: 0 $euiSizeS;
    background: $wuiCodeBlockBackgroundColor;

    .wuiCodeBlock__pre {
      padding: 0 $euiSizeXS;
    }

    .wuiCodeBlock__code {
      display: inline;
      white-space: normal;
    }
  }

  &.wuiCodeBlock--transparentBackground {
    background: transparent;
  }

  .hljs > *::selection {
    // Only change the color if the variable IS a color
    // or else no highlight color shows up at all
    @if type-of($wuiCodeBlockSelectedBackgroundColor) == color {
      background-color: $wuiCodeBlockSelectedBackgroundColor;
    }
  }

  .hljs-comment,
  .hljs-quote {
    color: $wuiCodeBlockCommentColor;
    font-style: italic;
  }

  .hljs-selector-tag {
    color: $wuiCodeBlockSelectorTagColor;
    font-weight: bold;
  }

  .hljs-string,
  .hljs-subst,
  .hljs-doctag {
    color: $wuiCodeBlockStringColor;
  }

  .hljs-number,
  .hljs-literal,
  .hljs-regexp,
  .hljs-variable,
  .hljs-template-variable,
  .hljs-tag .hljs-attr {
    color: $wuiCodeBlockNumberColor;
  }

  .hljs-keyword {
    color: $wuiCodeBlockKeywordColor;
  }

  .hljs-function > .hljs-title {
    color: $wuiCodeBlockFunctionTitleColor;
  }

  .hljs-tag {
    color: $wuiCodeBlockTagColor;
  }

  .hljs-name {
    color: $wuiCodeBlockNameColor;
  }

  .hljs-type,
  .hljs-class .hljs-title {
    color: $wuiCodeBlockTypeColor;
  }

  .hljs-attribute {
    color: $wuiCodeBlockAttributeColor;
  }

  .hljs-symbol,
  .hljs-bullet,
  .hljs-built_in,
  .hljs-builtin-name,
  .hljs-link {
    color: $wuiCodeBlockSymbolColor;
  }

  .hljs-params {
    color: $wuiCodeBlockParamsColor;
  }

  .hljs-meta {
    color: $wuiCodeBlockMetaColor;
  }

  .hljs-title {
    color: $wuiCodeBlockTitleColor;
  }

  .hljs-section {
    color: $wuiCodeBlockSectionColor;
  }

  .hljs-addition,
  .hljs-deletion {
    padding-left: $euiSizeXS;
    margin-left: -$euiSizeXS;
  }

  .hljs-addition {
    box-shadow: -$euiSizeXS 0 $wuiCodeBlockAdditionColor;
  }

  .hljs-deletion {
    box-shadow: -$euiSizeXS 0 $wuiCodeBlockDeletionColor;
  }

  .hljs-selector-class {
    color: $wuiCodeBlockSelectorClassColor;
  }

  .hljs-selector-id {
    color: $wuiCodeBlockSelectorIdColor;
  }

  .hljs-emphasis {
    font-style: italic;
  }

  .hljs-strong {
    font-weight: bold;
  }

  .hljs-link {
    text-decoration: underline;
  }
}
